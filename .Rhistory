db <- dbConnect(
RPostgres::Postgres(),
dbname = server_dbi,
port = port,
host = host,
user = user,
password = password
)
cdm <- cdmFromCon(
con = db,
cdmSchema = cdm_database_schema,
writeSchema = c("schema" = results_database_schema, "prefix" = tolower(table_stem)),
cdmName = names(ddbb[ddbb == server_dbi])
)
db <- dbConnect(
RPostgres::Postgres(),
dbname = server_dbi,
port = port,
host = host,
user = user,
password = password
)
# disconnect
cdmDisconnect(cdm)
db <- dbConnect(
RPostgres::Postgres(),
dbname = server_dbi,
port = port,
host = host,
user = user,
password = password
)
server_dbi
server_dbi <- "cdm_thin_be_202308"
db <- dbConnect(
RPostgres::Postgres(),
dbname = server_dbi,
port = port,
host = host,
user = user,
password = password
)
cdm <- cdmFromCon(
con = db,
cdmSchema = cdm_database_schema,
writeSchema = c("schema" = results_database_schema, "prefix" = tolower(table_stem)),
cdmName = names(ddbb[ddbb == server_dbi])
)
cdm$endo_cohorts <- conceptCohort(cdm = cdm, conceptSet = codelist, name = "endo_cohorts")
cohortCount(cdm$endo_cohorts)
library(SqlRender)
library(here)
library(dbplyr)
library(dplyr)
library(lubridate)
library(CDMConnector)
library(tidyr)
library(PatientProfiles)
library(ggplot2)
library(stringr)
library(glue)
library(CirceR)
library(CodelistGenerator)
library(CohortConstructor)
library(CohortCharacteristics)
library(CodelistGenerator)
library(visOmopResults)
ddbb <- c(
"CPRD Gold" = Sys.getenv("DB_SERVER_DBI_gd"),
"THIN Belgium" = Sys.getenv("DB_SERVER_DBI_thin_be_202308"),
"THIN France" = Sys.getenv("DB_SERVER_DBI_thin_fr_202308"),
"THIN Spain" = Sys.getenv("DB_SERVER_DBI_thin_es_202308"),
"THIN Italy" = Sys.getenv("DB_SERVER_DBI_thin_it_202308"),
"THIN UK" = Sys.getenv("DB_SERVER_DBI_thin_uk_202308"),
"THIN Romania" = Sys.getenv("DB_SERVER_DBI_thin_ro_202308")
)
user <- Sys.getenv("DB_USER")
password <- Sys.getenv("DB_PASSWORD")
port <- Sys.getenv("DB_PORT")
host <- Sys.getenv("DB_HOST")
cdm_database_schema <- "public"
results_database_schema <- "results"
table_stem <- "nmb_feas"
yearCounts <- list()
overlap <- list()
timing <- list()
jj <- 1
user <- Sys.getenv("DB_USER")
password <- Sys.getenv("DB_PASSWORD")
port <- Sys.getenv("DB_PORT")
host <- Sys.getenv("DB_HOST")
cdm_database_schema <- "public"
results_database_schema <- "results"
table_stem <- "nmb_feas"
db <- dbConnect(
RPostgres::Postgres(),
dbname = server_dbi,
port = port,
host = host,
user = user,
password = password
)
cdm <- cdmFromCon(
con = db,
cdmSchema = cdm_database_schema,
writeSchema = c("schema" = results_database_schema, "prefix" = tolower(table_stem)),
cdmName = names(ddbb[ddbb == server_dbi])
)
library(DBI)
db <- dbConnect(
RPostgres::Postgres(),
dbname = server_dbi,
port = port,
host = host,
user = user,
password = password
)
cdm <- cdmFromCon(
con = db,
cdmSchema = cdm_database_schema,
writeSchema = c("schema" = results_database_schema, "prefix" = tolower(table_stem)),
cdmName = names(ddbb[ddbb == server_dbi])
)
db <- dbConnect(
RPostgres::Postgres(),
dbname = ddbb[jj],
port = port,
host = host,
user = user,
password = password
)
ddbb[jj]
ddbb[[jj]]
db <- dbConnect(
RPostgres::Postgres(),
dbname = ddbb[[jj]],
port = port,
host = host,
user = user,
password = password
)
names(ddbb[jj])
cdm <- cdmFromCon(
con = db,
cdmSchema = cdm_database_schema,
writeSchema = c("schema" = results_database_schema, "prefix" = tolower(table_stem)),
cdmName = names(ddbb[jj])
)
candidateCodes <- getCandidateCodes(
cdm = cdm,
keywords = c("hip cemented hemiarthroplasty", "hip uncemented hemiarthroplasty"),
exclude = c("conversion", "revision", "removal"),
domains = c("procedure", "device"),
standardConcept = "Standard",
searchInSynonyms = TRUE,
searchNonStandard = FALSE,
includeDescendants = TRUE,
includeAncestor = FALSE
)
candidateCodes
candidateCodes <- getCandidateCodes(
cdm = cdm,
keywords = c("hip cemented hemiarthroplasty", "hip uncemented hemiarthroplasty", "hydroxyapatite-coated uncemented hemiarthroplasty"),
exclude = c("conversion", "revision", "removal"),
domains = c("procedure", "device"),
standardConcept = "Standard",
searchInSynonyms = TRUE,
searchNonStandard = FALSE,
includeDescendants = TRUE,
includeAncestor = FALSE
)
candidateCodes
codeUse <- summariseCodeUse(
x = candidateCodes,
cdm = cdm,
byYear = TRUE,
bySex = TRUE,
ageGroup = list(c(0, 59), c(60, 150))
)
codeUse <- summariseCodeUse(
x = candidateCodes$concept_id,
cdm = cdm,
byYear = TRUE,
bySex = TRUE,
ageGroup = list(c(0, 59), c(60, 150))
)
codeUse <- summariseCodeUse(
x = list("hip cemented hemiarthroplasty" = 4076072, "hip uncemented hemiarthroplasty" = c(4076471)),
cdm = cdm,
byYear = TRUE,
bySex = TRUE,
ageGroup = list(c(0, 59), c(60, 150))
)
tableCodeUse(codeUse)
tableCodeUse(codeUse |> filterStrata(year == "overall"))
tableCodeUse(codeUse |> filterStrata(year == "overall"), header = c("age_group", "sex"))
library(SqlRender)
library(dbplyr)
library(dplyr)
library(CDMConnector)
library(DBI)
library(glue)
library(CirceR)
library(CodelistGenerator)
server_dbi <- Sys.getenv("DB_SERVER_DBI_gd")
user <- Sys.getenv("DB_USER")
password <- Sys.getenv("DB_PASSWORD")
port <- Sys.getenv("DB_PORT")
host <- Sys.getenv("DB_HOST")
cdm_database_schema <- "public"
results_database_schema <- "results"
table_stem <- "nmb_feas"
db <- dbConnect(
drv = RPostgres::Postgres(),
dbname = server_dbi,
port = port,
host = host,
user = user,
password = password
)
cdm <- cdmFromCon(
con = db,
cdmSchema = cdm_database_schema,
writeSchema = results_database_schema,
writePrefix = tolower(table_stem),
cdmName = "CPRD Gold"
)
candidateCodes <- getCandidateCodes(
cdm = cdm,
keywords = c("hip cemented hemiarthroplasty", "hip uncemented hemiarthroplasty", "fracture of proximal end of femur"),
exclude = c("conversion", "revision", "removal"),
domains = c("procedure", "device"),
standardConcept = "Standard",
searchInSynonyms = TRUE,
searchNonStandard = FALSE,
includeDescendants = TRUE,
includeAncestor = FALSE
)
candidateCodes <- getCandidateCodes(
cdm = cdm,
keywords = c("hip cemented hemiarthroplasty", "hip uncemented hemiarthroplasty", "fracture of proximal end of femur"),
exclude = c("conversion", "revision", "removal"),
domains = c("procedure", "device"),
standardConcept = "Standard",
searchInSynonyms = TRUE,
searchNonStandard = FALSE,
includeDescendants = TRUE,
includeAncestor = FALSE
)
candidateCodes
codesFracture <- getCandidateCodes(
cdm = cdm,
keywords = c("fracture of proximal end of femur"),
exclude = c("conversion", "revision", "removal"),
domains = c("procedure", "device"),
standardConcept = "Standard",
searchInSynonyms = TRUE,
searchNonStandard = FALSE,
includeDescendants = TRUE,
includeAncestor = FALSE
)
codesUncemented <- getCandidateCodes(
cdm = cdm,
keywords = c("hip uncemented hemiarthroplasty"),
exclude = c("conversion", "revision", "removal"),
domains = c("procedure", "device"),
standardConcept = "Standard",
searchInSynonyms = TRUE,
searchNonStandard = FALSE,
includeDescendants = TRUE,
includeAncestor = FALSE
)
codesCemented <- getCandidateCodes(
cdm = cdm,
keywords = c("hip cemented hemiarthroplasty"),
exclude = c("conversion", "revision", "removal"),
domains = c("procedure", "device"),
standardConcept = "Standard",
searchInSynonyms = TRUE,
searchNonStandard = FALSE,
includeDescendants = TRUE,
includeAncestor = FALSE
)
list("fracture of proximal end of femur" = codesFracture$concept_id,
"hip cemented hemiarthroplasty" = codesCemented$concept_id,
"hip uncemented hemiarthroplasty" = codesUncemented$concept_id)
codeUse <- summariseCodeUse(
x = list("fracture of proximal end of femur" = codesFracture$concept_id,
"hip cemented hemiarthroplasty" = codesCemented$concept_id,
"hip uncemented hemiarthroplasty" = codesUncemented$concept_id),
cdm = cdm,
byYear = TRUE,
bySex = TRUE,
ageGroup = list(c(0, 59), c(60, 150))
)
library(omopgenerics)
exportSummarisedResult(codeUse)
renv::activate()
install.packages(c("CodelistGenerator", "DBI", "CDMConnector", "dbplyr", "SqlRender"))
renv::lockfile_create()
renv::update()
renv::snapshot()
# get packages
renv::restore()
# load packages
library(SqlRender)
library(CDMConnector)
library(DBI)
library(CodelistGenerator)
library(omopgenerics)
# database information
server_dbi <- "..."
user <- "..."
password <- "..."
port <- "..."
host <- "..."
# database schemas
cdm_database_schema <- "..."
results_database_schema <- "..."
# prefix to identify cohorts
table_stem <- "..."
# database name
database_name <- "..."
# connecto to the database
db <- dbConnect(
drv = RPostgres::Postgres(),
dbname = server_dbi,
port = port,
host = host,
user = user,
password = password
)
?tableCodeUse
database_name <- "CPRD Gold" # "SIDIAP", "UiO", "CPRD
# Connection details
server_dbi <- Sys.getenv("DB_SERVER_DBI_gd")
user <- Sys.getenv("DB_USER")
password <- Sys.getenv("DB_PASSWORD")
port <- Sys.getenv("DB_PORT")
host <- Sys.getenv("DB_HOST")
db <- dbConnect(
RPostgres::Postgres(),
dbname = server_dbi,
port = port,
host = host,
user = user,
password = password
)
cdm_database_schema <- "public_100k"
results_database_schema <- "results"
# cohort stem where cohorts will be instantiated
table_stem <- "nmb_vax"
cdm <- cdmFromCon(
con = db,
cdmSchema = cdm_database_schema,
writeSchema = c("schema" = results_database_schema, "prefix" = tolower(table_stem)),
cdmName = database_name,
.softValidation = TRUE
)
# create codelists
codesFracture <- getCandidateCodes(
cdm = cdm,
keywords = c("fracture of proximal end of femur"),
exclude = c("conversion", "revision", "removal"),
domains = c("procedure", "device"),
standardConcept = "Standard",
searchInSynonyms = TRUE,
searchNonStandard = FALSE,
includeDescendants = TRUE,
includeAncestor = FALSE
)
codesUncemented <- getCandidateCodes(
cdm = cdm,
keywords = c("hip uncemented hemiarthroplasty"),
exclude = c("conversion", "revision", "removal"),
domains = c("procedure", "device"),
standardConcept = "Standard",
searchInSynonyms = TRUE,
searchNonStandard = FALSE,
includeDescendants = TRUE,
includeAncestor = FALSE
)
codesCemented <- getCandidateCodes(
cdm = cdm,
keywords = c("hip cemented hemiarthroplasty"),
exclude = c("conversion", "revision", "removal"),
domains = c("procedure", "device"),
standardConcept = "Standard",
searchInSynonyms = TRUE,
searchNonStandard = FALSE,
includeDescendants = TRUE,
includeAncestor = FALSE
)
# get codelist use
codeUse <- summariseCodeUse(
x = list("fracture of proximal end of femur" = codesFracture$concept_id,
"hip cemented hemiarthroplasty" = codesCemented$concept_id,
"hip uncemented hemiarthroplasty" = codesUncemented$concept_id),
cdm = cdm,
byYear = TRUE,
bySex = TRUE,
ageGroup = list(c(0, 59), c(60, 150))
)
# see results
tableCodeUse(codeUse |> filterStrata(overall == "overall"))
# get codelist use
codeUse <- summariseCodeUse(
x = list("fracture of proximal end of femur" = codesFracture$concept_id,
"hip cemented hemiarthroplasty" = codesCemented$concept_id,
"hip uncemented hemiarthroplasty" = codesUncemented$concept_id),
cdm = cdm,
byYear = TRUE,
bySex = TRUE,
ageGroup = list(c(0, 59), c(60, 150))
)
database_name <- "CPRD Gold" # "SIDIAP", "UiO", "CPRD
# Connection details
server_dbi <- Sys.getenv("DB_SERVER_DBI_gd")
user <- Sys.getenv("DB_USER")
password <- Sys.getenv("DB_PASSWORD")
port <- Sys.getenv("DB_PORT")
host <- Sys.getenv("DB_HOST")
db <- dbConnect(
RPostgres::Postgres(),
dbname = server_dbi,
port = port,
host = host,
user = user,
password = password
)
cdm_database_schema <- "public"
results_database_schema <- "results"
# cohort stem where cohorts will be instantiated
table_stem <- "nmb_vax"
cdm <- cdmFromCon(
con = db,
cdmSchema = cdm_database_schema,
writeSchema = c("schema" = results_database_schema, "prefix" = tolower(table_stem)),
cdmName = database_name,
.softValidation = TRUE
)
# create cdm object
cdm <- cdmFromCon(
con = db,
cdmSchema = cdm_database_schema,
writeSchema = results_database_schema,
writePrefix = tolower(table_stem),
cdmName = database_name
)
# create codelists
codesFracture <- getCandidateCodes(
cdm = cdm,
keywords = c("fracture of proximal end of femur"),
exclude = c("conversion", "revision", "removal"),
domains = c("procedure", "device"),
standardConcept = "Standard",
searchInSynonyms = TRUE,
searchNonStandard = FALSE,
includeDescendants = TRUE,
includeAncestor = FALSE
)
codesUncemented <- getCandidateCodes(
cdm = cdm,
keywords = c("hip uncemented hemiarthroplasty"),
exclude = c("conversion", "revision", "removal"),
domains = c("procedure", "device"),
standardConcept = "Standard",
searchInSynonyms = TRUE,
searchNonStandard = FALSE,
includeDescendants = TRUE,
includeAncestor = FALSE
)
codesCemented <- getCandidateCodes(
cdm = cdm,
keywords = c("hip cemented hemiarthroplasty"),
exclude = c("conversion", "revision", "removal"),
domains = c("procedure", "device"),
standardConcept = "Standard",
searchInSynonyms = TRUE,
searchNonStandard = FALSE,
includeDescendants = TRUE,
includeAncestor = FALSE
)
# get codelist use
codeUse <- summariseCodeUse(
x = list("fracture of proximal end of femur" = codesFracture$concept_id,
"hip cemented hemiarthroplasty" = codesCemented$concept_id,
"hip uncemented hemiarthroplasty" = codesUncemented$concept_id),
cdm = cdm,
byYear = TRUE,
bySex = TRUE,
ageGroup = list(c(0, 59), c(60, 150))
)
# see results
tableCodeUse(codeUse |> filterStrata(overall == "overall"))
codeUse
# see results
tableCodeUse(codeUse |> filterStrata(sex == "overall", year = "overall"))
# see results
tableCodeUse(codeUse |> filterStrata(age_group == "overall", year == "overall"))
install.packages("visOmopResults")
# see results
tableCodeUse(codeUse |> filterStrata(age_group == "overall", year == "overall"))
install.packages("gt")
renv::snapshot()
# see results
tableCodeUse(codeUse |> filterStrata(age_group == "overall", year == "overall"))
# see results
tableCodeUse(codeUse |> filterStrata(age_group == "overall", sex == "overall", year == "overall"))
codesFracture$concept_id
# disconnect
cdmDisconnect(cdm)
